Thu Feb 20 2003
	- Fixed bug in get_group_objects() that caused it to return the query record set, not the data itself. Thanks to Thomas <tstruebi@pentacon.ch> for submitting a patch.
	- Fixed bug in del_group(), as it neglected to remove the object mapping. Thanks to Thomas <tstruebi@pentacon.ch> for pointing this out.
Tue Feb 18 2003
	- Added 'force_cache_expire' option, so the cache is automaticalled expired when ACL/Group modifications take place.
		This should allow the cache_expire_time to be greatly increased (86400?) and still maintain instance updates.
	- Removed un-needed table joins in search_acl() resulting in a large performance increase. 
	
Mon Feb 17 2003
	- Added "limit" to ARO select query in group_assign.php
	
Fri Feb 14 2003
	- Tweeked consolidate_edit_acl() to better consolidate ACLs in the expected manor.
	- Fixed cache ID in acl_get_group_path() so it doesn't contain non-alphanumeric characters.
	
Wed Feb 12 2003
	- Fixed bug caused by overzealous array_unique in add_acl()
	- Switched acl_query() to return TRUE/FALSE for the 'allow' return value instead of 1/0
	- API group functions didn't manipulate the path_to_root mapping when reparenting or deleting occured.
	
Tue Feb 04 2003
	- Fixed bug in edit_group(), added more error checking.
	- Added object searching to the assign group pages.
	- Moved all templates to $smarty_template_dir/phpgacl/ to better integrate with existing smarty installations.
	- Fixed recursion in format_groups() so it doesn't use globals anymore.
	- Greatly improved performance in sort_groups() (50% improvement) and format_groups() (20%) functions.
	
Thu Jan 31 2003
	- Added conflict detection to add_acl();
	
Thu Jan 30 2003
	- Created search_acl() to search for ACLs mapped to specific objects. This should also work for detecting conflicting ACLs.
	- Created shift_acl() that basically does the opposite of append_acl(). Remove just the specific objects from the ACL mapping.
	
Wed Jan 29 2003
	- Created append_acl() function for simply appending ACO/ARO/ARO Groups/AXO/AXO Groups on to an already existing ACL.
	
Mon Jan 28 2003
	- Added ACL searching.
	- Added ACL debug page.
	- Added sanity checks to add_acl()/edit_acl() to make sure the objects mapped to ACLs actually exist.
	- Transactionalized most API functions.
	
Fri Jan 24 2003
	- Fixed JS UnSelect button bug for AXO groups.
	- Added Object searching to help the admin interface handle an unlimited number of objects.
	- Added "max_select_box_items" config option to set the maximum number of items shown in select boxes. 
	
Tue Jan 14 2003
	- Upgraded ADODB to v3.00
	- Added user definable ACL return values, along with the acl_return_value() function.
	- Added ACL notes which serve no other purpose other than to help the administrator keep track of ACL's
	- Added paging for large record sets.

Sun Dec 15 2002
	- Moved to a completely OO structure.
	- Config options can now be passed during object creation. $gacl = new gacl($options);
	
Sun Dec 01 2002
	- Fixed bug that broke allow and enabled from being changed when editing ACLs.
	
Sat Nov 30 2002
	- Merged ERASE feature in to API functions, del_object() and del_object_section() thanks to Martino.
	- Changed the acl list page layout
	- Changed the acl test page layout
	- Added assigned object count to the group admin page.
	- Fixed a JS bug that wouldn't allow you to "select" (>>) any objects at all, if one was already selected.
	
Sun Nov 17 2002
	- format_groups() function wasn't recursing as efficiently as it could be. Fixed.
	- Re-wrote API aro/aco/group specific functions to be generic to help support AXO's.
	- Re-wrote aro/aco/group specific admin scripts to be generic to help support AXO's.
	- Added AXO support to acl_admin.php.
	- Updated gacl.inc.php to support AXO's.
	
Mon Nov 11 2002
	- Changed the ordering of the main acl_query() SQL query. It wasn't properly preferring the deepest groups ACLs. - Thanks to Mauro
		for spotting this one and helping me track it down.
	- Fixed bug that prevented ACO/ARO's with the same 'value' in different sections from being assigned to an ACL. - Thanks to Martino
	- Fixed bug that made it seem like assigning a single ARO to a group really added all AROs with the same value to that group. - Thanks to Martino
	- Fixed bug causing virtual subtree'ing to only traverse 2 levels of the tree. - Thanks to Martino
	- Used dirname(__FILE__) to remove the need for users to manually set the root path in config.inc.php.
	
Wed Oct 23 2002
	- Switched away from ID's in favor of VALUES for most functions, including acl_check(). Broke all backwards compatibility.
	- Modified DB Schema to reflect above.
	- When ARO/ACO values are changed, the API will modify said values in all tables.
	- Added a variable for phpGACL's current path. 
	
Wed Oct 09 2002 
	- Added "hidden" flags to relavent API functions
	- Added Oracle 8i schema to setup.php
	- Changed group "level" table column name to "tree_level", as the old name "level" was a reserved word in some db's.
		MySQL: ALTER TABLE `groups_path` CHANGE `level` `tree_level` INT(12) DEFAULT '0' NOT NULL
	- Modified a few of the queries to be more portable, specifically for Oracle's sake.
	- Added a FAQ entry regarding individualized item permissions. 
	
Wed Sep 25 2002
	- Added multi-layer ACO checking to ACL_QUERY()
	- Removed multi-layer ACO checking in favor of "dual" acl checking. ie:
		If you want to set ACL's on a contact list. Create ACO's for each Contact in the list.
		and create more generic ACO's for things like "View - Contacts", "Edit - Contacts".
		Then simply create an ACL with ACO's "View - Contacts" AND "Contact ID: 15"
		Then if ( acl_check("View - Contacts", "John Doe") AND acl_check("Contact ID: 15", "John Doe"))
		Very simple, and should be just as fast, or faster then adding more bloat to the database.
	- Added "hidden" flag to ACO, ACO Sections, ARO, and ARO sections. 
